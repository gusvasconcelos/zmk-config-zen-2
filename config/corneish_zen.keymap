/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hrm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mod";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
        };
    };

    macros {
        fat_arrow: fat_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "FAT_ARROW";
        };

        lock: lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_COMMAND &kp L>;
            label = "LOCK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Colemak";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q               &kp W           &kp F               &kp P             &kp B        &kp J        &kp L              &kp U                &kp Y            &kp SQT          &kp PSCRN
&trans  &mt LEFT_COMMAND A  &mt LEFT_ALT R  &mt LEFT_CONTROL S  &mt LEFT_SHIFT T  &kp G        &kp M        &mt RIGHT_SHIFT N  &mt RIGHT_CONTROL E  &mt RIGHT_ALT I  &mt RIGHT_GUI O  &kp K_WWW
&lock   &kp Z               &kp X           &kp C               &kp D             &kp V        &kp K        &kp H              &kp COMMA            &kp DOT          &kp FSLH         &lock
                                            &lt 3 ESCAPE        &lt 1 SPACE       &lt 2 TAB    &lt 5 ENTER  &lt 4 BACKSPACE    &lt 6 DEL
            >;
        };

        nav_layer {
            display-name = "Nav";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans            &trans        &trans     &trans          &trans    &kp K_REDO        &kp K_PASTE    &kp K_COPY      &kp K_CUT     &kp K_UNDO  &trans
&trans  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &kp LOCKING_CAPS  &kp LEFT       &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT   &trans
&trans  &trans            &trans        &trans     &trans          &trans    &kp INSERT        &kp HOME       &kp PAGE_DOWN   &kp PAGE_UP   &kp END     &trans
                                        &trans     &trans          &trans    &kp ENTER         &kp BACKSPACE  &kp DELETE
            >;
        };

        mouse_layer {
            display-name = "Mouse";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans            &trans        &trans     &trans      &trans    &kp K_REDO  &kp K_PASTE  &kp K_COPY      &kp K_CUT     &kp K_UNDO       &trans
&trans  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LCTRL  &kp LSHIFT  &trans    &trans      &kp LEFT     &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans            &trans        &trans     &trans      &trans    &trans      &kp LEFT     &kp DOWN        &kp UP_ARROW  &kp RIGHT        &trans
                                        &trans     &trans      &trans    &mkp MB1    &mkp MB3     &mkp MB2
            >;
        };

        media_layer {
            display-name = "Mouse";
            bindings = <
&trans  &trans            &trans        &trans     &trans      &trans    &rgb_ug RGB_TOG    &rgb_ug RGB_EFF   &rgb_ug RGB_HUI    &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &bt BT_CLR_ALL
&trans  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LCTRL  &kp LSHIFT  &trans    &ext_power EP_TOG  &kp C_PREV        &kp C_VOLUME_DOWN  &kp C_VOL_UP     &kp C_NEXT       &bt BT_CLR_ALL
&trans  &trans            &trans        &trans     &trans      &trans    &out OUT_TOG       &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_CLR       &bt BT_CLR_ALL
                                        &trans     &trans      &trans    &kp C_PAUSE        &kp C_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        num_layer {
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans    &trans  &trans           &trans     &trans         &trans             &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans    &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_COMMAND  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans    &trans  &trans           &trans     &trans         &trans             &trans
                        &trans  &kp N0  &trans    &trans  &trans           &trans
            >;
        };

        sym_layer_1 {
            bindings = <
&trans  &kp GRAVE  &kp LESS_THAN  &kp GREATER_THAN  &kp MINUS          &kp PIPE         &trans  &trans           &trans     &trans         &trans             &trans
&trans  &kp EXCL   &kp ASTRK      &kp SLASH         &kp EQUAL          &kp AMPERSAND    &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_COMMAND  &trans
&trans  &kp TILDE  &kp PLUS       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PERCENT      &trans  &trans           &trans     &trans         &trans             &trans
                                  &kp MINUS         &kp UNDERSCORE     &mo 7            &trans  &trans           &trans
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8      &kp F9     &kp PRINTSCREEN    &trans  &trans           &trans     &trans         &trans             &trans
&trans  &kp F11  &kp F4  &kp F5      &kp F6     &kp SCROLLLOCK     &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_COMMAND  &trans
&trans  &kp F10  &kp F1  &kp F2      &kp F3     &kp PAUSE_BREAK    &trans  &trans           &trans     &trans         &trans             &trans
                         &kp ESCAPE  &kp SPACE  &kp TAB            &trans  &trans           &trans
            >;
        };

        sym_layer_2 {
            bindings = <
&trans  &trans    &trans    &trans            &trans          &trans    &kp CARET    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR     &fat_arrow         &trans
&trans  &kp LGUI  &kp LALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &kp HASH     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp DOUBLE_QUOTES  &trans
&trans  &trans    &trans    &trans            &trans          &trans    &kp AT_SIGN  &kp COLON             &kp COMMA              &kp DOT        &kp SINGLE_QUOTE   &trans
                            &trans            &trans          &trans    &trans       &trans                &trans
            >;
        };
    };
};
